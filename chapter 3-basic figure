#------------------------------图形初阶------------------------------------
# 使用图形

pdf("great.pdf")
attach(mtcars)
plot(wt,mpg) # 以wt为横轴，以mpg为纵轴绘制散点图
abline(lm(mpg~wt)) # 将mpg对wt做回归
title("Regression of MPG on Weight") # 添加标题
detach(mtcars)
dev.off()

# 创建多个图形并随时查看每一个，这样可以避免新的图形覆盖旧的图形
# 方法1 创建一副新图形之前打开一个新的图形窗口
dev.new()
mtcars
attach(mtcars)
dev.new()
plot(wt,mpg)
dev.new()
plot(wt,qsec)  # 输出的结果是两幅图像

#------------------------------一个简单例子------------------------------------
effect=read.csv("chapter_3.csv")
effect
names(effect)[1]="dose"
names(effect)[2]="drugA"
names(effect)[3]="drugB"
with(effect,{
  plot(dose,drugA,type = "b") # type = "b"表示同时绘制点和线
}) # 用with(,{})绘制的图形不含有effect$
# 生成含有当前图形参数设置的列表
par()
#------------------------------图形参数------------------------------------
# 符号和线条
# 使用实心三角形而不是空心圆来作为点的符号
opar <- par(no.readonly=TRUE) # 生成一个可以修改的当前图形参数列表
class(opar) # 返回一个列表opar，里面有可以修改的图形参数
par(lty=2, pch=17) # lty=2代表线条类型为虚线，pch=17 代表实心三角
plot(effect$dose, effect$drugA, type="b")  # 绘制修改后的图形
par(opar)  # 还原初始设置

# 为plot函数直接提供optionname=value键值对，指定的选项仅对图形本身有效，这样就不用还原初始设置了
plot(effect$dose, effect$drugA, type="b",lty=2, pch=17)
# 设置点用线连接，线为点线，线宽为3倍，点为实心正方形，点宽为两倍
plot(effect$dose, effect$drugA, type="b",lty=3, lwd=3, pch=15, cex=2)

# ---------------------------文本属性---------------------------
# font.lab=3 表示坐标轴标签斜体, cex.lab=1.5表示坐标轴标签字体1.5倍于默认文本大小
# font.main=4 表示主标题为粗斜体, cex.main=2表示主标题字体2倍于默认大小
opar <- par(no.readonly=TRUE) # 生成一个可以修改的当前图形参数列表
par(font.lab=3, cex.lab=1.5, font.main=4, cex.main=2) # lty=2代表线条类型为虚线，pch=17 代表实心三角
plot(effect$dose, effect$drugA, type="b")  # 绘制修改后的图形
par(opar)  # 还原初始设置

# 获取字体族
# A代表无衬线字体,B代表衬线字体，C代表等宽字体
windowsFonts(
  A=windowsFont("Arial Black"),
  B=windowsFont("Times New Roman"),
  C=windowsFont("Comic Sans MS")
)
class(A)  # A是一个数量框
# font.lab=3 表示坐标轴标签斜体, cex.lab=1.5表示坐标轴标签字体1.5倍于默认文本大小
# font.main=4 表示主标题为粗斜体, cex.main=2表示主标题字体2倍于默认大小
opar <- par(no.readonly=TRUE) # 生成一个可以修改的当前图形参数列表
par(font.lab=3, cex.lab=1.5, font.main=4, cex.main=2,family="C") # lty=2代表线条类型为虚线，pch=17 代表实心三角
plot(effect$dose, effect$drugA, type="b")  # 绘制修改后的图形
par(opar)  # 还原初始设置
# 想要用PDF的格式输出图形，可以先用names(pdfFonds())找出系统中哪些字体可用
names(pdfFonts())
pdf("good.pdf", family="Times") # 指定用Times字体来输出
with(mtcars,{
plot(wt,mpg) # 以wt为横轴，以mpg为纵轴绘制散点图
abline(lm(mpg~wt)) # 将mpg对wt做回归
title("Regression of MPG on Weight") # 添加标题
})
dev.off()
#---------------------------图形尺寸与边界尺寸---------------------------
opar <- par(no.readonly = TRUE)
par <- (pin=c(2,3)) # 规定输出图形宽为2英寸，高为3英寸
par(lwd=2, cex=1.5) # 线宽为2倍，文本放大1.5倍
par(cex.axis=.75,font.axis=3) # 规定坐标轴字体为斜体，大小为0.75倍
# 绘图符号为实心圆，线段用虚线，颜色用红色
plot(effect$dose,effect$drugA,type = "b", pch=19,lty=2, col="red")
# 绘图符号为空心菱形，线段类型用点直线，线段颜色(及绘图符号边界）用蓝色，空心菱形用绿色填充
plot(effect$dose,effect$drugA,type = "b", pch=23,lty=6,col="blue",bg="green")
par(opar)
#---------------------------添加文本、自定义坐标轴和图例---------------------------
# 用空心三角形填充, 主标题为"Clinical Trials for Drug A"
# 副标题为"This is hypothetical data", x轴坐标为"Dosage"
# y轴坐标为"Drug Response", x轴的取值范围为(0,60),y轴取值范围为(0,70)
plot(effect$dose,effect$drugA,type = "b", col="red",
     lty=2,pch=2, lwd=2, main="Clinical Trials for Drug A",
     sub="This is hypothetical data",xlab="Dosage",ylab="Drug Response",
     xlim=c(0, 60), ylim=c(0, 70))
# 使用title()函数为图形添加标题或坐标轴标签
# 使用前最好先移除默认的标题和标签(在plot中传入参数ann=FALSE)，否则图像可能会有重叠
with(effect,{
  plot(dose,drugA,type = "b",ann = FALSE) # type = "b"表示同时绘制点和线
}) # 用with(,{})绘制的图形不含有effect$
title(main="Clinical Trials for Drug A",sub="This is hypothetical data",
      xlab="Dosage",ylab="Drug Response")
# title()也可以指定文本大小，字体，旋转角度和颜色等
# 设置主标题颜色为红色，副标题颜色为蓝色，坐标轴标签为绿色，大小为0.75倍
title(main="Clinical Trials for Drug A",col.main="red",sub="This is hypothetical data",
      col.sub="blue",xlab="Dosage",ylab="Drug Response", col.lab="green", cex.lab=0.75)
#---------------------------坐标轴---------------------------
# 在添加坐标轴之前，你需要禁用自动生成的坐标轴
x <- c(1:10)
y <- x
z <- 10/x
opar <- par(no.readonly=TRUE)
# 以数值向量表示边界大小，顺序为“下、左、上、右”，单位为英分
par(mar=c(5,4,4,8) + 0.1)
# 取消y轴的刻度(但是保留了框架线)
plot(x,y,type="b",pch=21, col="red",yaxt="n",lty=3,ann=FALSE)
lines(x,z,type="b",pch=22,col="blue",lty=2)  # 为一幅现有的图形添加新的图形元素
# at=x，表示需要绘制的位置为x(1:10)
# lables=x表示置于刻度线旁边的文字标签就为x
# las=2表示标签垂直于坐标轴
axis(2,at=1:10,labels=x,col.axis="red",las=2)
# 4代表在图形右边绘制坐标轴
# at=z表示要绘制的位置为z(10,5,3.33,...,1)
# lables=z表示置于刻度线旁边的文字标签为z
# las=2代表标签垂直于坐标轴，lab=0.001代表标签平行于坐标轴
# tck=-0.01表示刻度线朝向图像外侧，且长度为0.01
axis(4, at=z, labels=round(z, digits=2),
     col.axis="blue", las=2, cex.axis=0.7,tck=-.01)
# 添加文本
# line=4 表示标签距离side的长度为4
# mtext()用于在图形边界添加文本
mtext("y=1/x", side=4, line=4, cex.lab=1, las=2, col="blue")
# 因为左边边界长度为4，所以line的值不能超过4
mtext("y=x", side=2, line=2, cex.lab=1, las=2, col="red")

# 添加标题
title("An Example of Creative Axes", xlab="X values")

# 添加次要刻度线
# 将每两个X(Y)主刻度线之间划分成2(3)个区间，次要刻度线的长度是主刻度线的0.5倍
minor.tick(nx=2, ny=3, tick.ratio=0.5)


#---------------------------参考线---------------------------
# 为药物平均治疗效果添加参考线
abline(h=mean(z), lty=2, col="blue")
abline(h=mean(y), lty=2, col="red")
#----------------------------图例---------------------------
opar <- par(no.readonly=TRUE)

par(lwd=2, cex=1.5, font.lab=2)   # font.lab=2 标签用粗体
with(effect,{
  plot(dose, drugA, type="b", pch=15, lty=1, col="red",
       ylim=c(0, 60), main="Drug A vs. Drug B",
       xlab="Drug Dosage", ylab="Drug Response")
  lines(dose, drugB, type="b", pch=17, lty=2, col="blue")
})
# abline既可以做回归，又可以画水平线
abline(h=c(30), lwd=1.5, lty=2, col="gray")

library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio = 0.5)
# "topleft"在左上角加图例, inset=0表示图例完全置于左上角，不移动
# cex=0.7表示将图例缩小为原来的0.7倍
legend("topleft", inset = 0.05, cex=0.75, title="Drug Type",
       c("A","B"),lty=c(1,2),pch = c(15,17), col = c("red","blue"))

par(opar)

#----------------------------文本标注---------------------------
opar <- par(no.readonly=TRUE)
with(mtcars,{
  plot(wt,mpg,
       main="Mileage vs. Car Weight",
       xlab="Weight",ylab="Mileage",
       pch=18, col="blue")
  # pos=4代表文本绘制在坐标的右侧
  lm_reg <- lm(mpg~wt) # lm(mpg~wt)才是真正用来做回归的
  print(lm_reg) 
  abline(lm(mpg~wt))  # abline是用来画直线方程的
  text(wt, mpg, cex=1, row.names(mtcars),  # row.names(mtcars)返回一个字符串向量，代表着添加的文本内容
       pos=4, col="red")
})
par(opar)

opar <- par(no.readonly=TRUE)
par(cex=1.5)
# type="n"代表着不打点
plot(1:7,1:7,type="n")
# 用默认字体写出文本
text(3,3,"Example of default text")
# 用"mono"字体族写出文本
text(4,4,family="mono","Example of default text")
# 用"serif"字体族写出文本
text(5,5,family="serif","Example of default text")
par(opar)
#----------------------------图形组合---------------------------
# 创建四副图形并排列在两行两列中
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,2)) # 按行填充图形
with(mtcars,{
  plot(wt, mpg, main="Scatterplot of wt vs. mpg")
  plot(wt, disp, main="Scatterplot of wt vs. disp")
  hist(wt, main="Histogram of wt")  #绘制wt的直方图
  boxplot(wt, main="Boxplot of wt") # 绘制wt的箱型图
})
mtcars$wt
par(opar)

# 使用ann=FALSE可以禁用所有标题和标签
opar <- par(no.readonly=TRUE)
par(mfrow=c(3,1))
with(mtcars,{
  hist(wt)
  hist(mpg)
  hist(disp)
  })
par(opar)

# 更复杂的图形组合方式(让一幅图被置于第一行，另外两幅图占据第二行)
A=matrix(c(1,1,2,3), 2, 2, byrow = TRUE)
with(mtcars,{
  layout(A)
  hist(wt)
  hist(mpg)
  hist(disp)
})
# 指定第二列的宽度是第一列宽度的1/2，第二行高度是第一行高度的两倍
# widths一定指列宽，heights一定指行高
A=matrix(c(1,1,2,3), 2, 2, byrow = TRUE)
with(mtcars,{
  layout(A, widths = c(2,1), heights = c(1,2))
  hist(wt)
  hist(mpg)
  hist(disp)
})
#----------------------------图形布局的精细控制---------------------------
dev.new()
opar <- par(no.readonly=TRUE)
par(fig=c(0, 0.8, 0, 0.8)) # 图像横坐标为(0,0.8),纵坐标范围为(0,0.8)
plot(mtcars$wt, mtcars$mpg,
     xlab="Miles Per Gallon",
     ylab="Car Weight")
# 图形超边界，需要往内移动,往fig中传入的参数是需要你不断调整，直到找到一个最好的
par(fig=c(0,0.8,0.55,1),new=TRUE)
    # horizontal=TRUE表示图形水平放置, axes=FALSE表示不画坐标轴(轴线)
boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)

par(fig=c(0.65, 1, 0, 0.8),new=TRUE)
boxplot(mtcars$mpg, horizontal = FALSE, axes= FALSE)
# outer表示如果可以的话，字体绘制在外边缘(如果不这样设置，字体会被写到图形里面)
mtext("Enhanced Scatterplot", side=3, outer=TRUE, line= -4)
par(opar)
